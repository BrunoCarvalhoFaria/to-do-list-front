{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport api from \"./services/api\";\nVue.use(Vuex);\nconst store = new Vuex.Store({\n  state: {\n    newTask: {\n      name: '',\n      date: '',\n      description: '',\n      done: false\n    },\n    taskDefault: {\n      name: '',\n      date: '',\n      description: '',\n      done: false\n    },\n    taskList: []\n  },\n  mutations: {\n    loadTaskList: async state => {\n      await api.get(\"\").then(res => {\n        state.taskList = res.data;\n      }).catch(err => {\n        console.log('ERRO NA REQUISIÇÃO DAS TASKS');\n        console.log(err);\n      });\n    },\n    filterTaskList: async (state, filter) => {\n      let filterElement = '';\n      //Filter=StartDate>={data};StartDate<={data}\n\n      switch (filter.selectedFilter) {\n        case \"Nome\":\n          filterElement = `filter=${filter.filterName}`;\n          break;\n        case \"Data\":\n          filterElement = `filter=${filter.filterDate}`;\n          break;\n        case \"Status\":\n          break;\n      }\n      console.log(filter);\n      await api.get(filterElement).then(res => {\n        state.taskList = res.data;\n      }).catch(err => {\n        console.log('ERRO NA REQUISIÇÃO DAS TASKS');\n        console.log(err);\n      });\n    },\n    changeTaskStatus: async (state, id) => {\n      const idIndex = state.taskList.map(task => task._id);\n      const index = idIndex.indexOf(id);\n      state.taskList[index].done = !state.taskList[index].done;\n      await api.post(`/updateTask/${id}`, JSON.parse(JSON.stringify(state.taskList[index]))).then(res => {\n        state.taskList = res.data;\n        state.newTask = state.taskDefault;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    addNewTask: async state => {\n      await api.post(\"/create\", JSON.parse(JSON.stringify(state.newTask))).then(res => {\n        state.taskList = res.data;\n        state.newTask = state.taskDefault;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    newTaskMount: (state, taskTemp) => {\n      state.newTask = taskTemp;\n    },\n    deleteTask: async (state, id) => {\n      await api.get(`/deleteTask/${id}`).then(res => {\n        state.taskList = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    editTask: async (state, id) => {\n      await api.post(`/updateTask/${id}`, JSON.parse(JSON.stringify(state.newTask))).then(res => {\n        state.taskList = res.data;\n        state.newTask = state.taskDefault;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  getters: {}\n});\nexport { store };","map":{"version":3,"names":["Vue","Vuex","api","use","store","Store","state","newTask","name","date","description","done","taskDefault","taskList","mutations","loadTaskList","get","then","res","data","catch","err","console","log","filterTaskList","filter","filterElement","selectedFilter","filterName","filterDate","changeTaskStatus","id","idIndex","map","task","_id","index","indexOf","post","JSON","parse","stringify","addNewTask","newTaskMount","taskTemp","deleteTask","editTask","getters"],"sources":["/home/bruno/Área de Trabalho/Programacao/to-do-list/front/src/vuex.js"],"sourcesContent":["\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport api from \"./services/api\";\n\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  state: {\n    newTask: {\n      name: '',\n      date: '',\n      description: '',\n      done: false\n    },\n    taskDefault: {\n      name: '',\n      date: '',\n      description: '',\n      done: false\n    },\n    taskList: [\n      ]\n  },\n\n  mutations: {\n    loadTaskList: async (state) => {\n      await api.get(\"\").then((res) =>{\n        state.taskList = res.data;                \n      }).catch ((err)  => {\n        console.log('ERRO NA REQUISIÇÃO DAS TASKS')\n        console.log(err)\n      })\n    },\n\n    filterTaskList: async (state, filter) => {\n      let filterElement = '';\n      //Filter=StartDate>={data};StartDate<={data}\n\n      switch (filter.selectedFilter) {\n      case \"Nome\":\n        filterElement = `filter=${filter.filterName}`;\n      break\n      case \"Data\":\n        filterElement = `filter=${filter.filterDate}`;\n      break\n      case \"Status\":\n\n      break      \n      }\n      \n\n      console.log(filter)\n      await api.get(filterElement).then((res) =>{\n        state.taskList = res.data;                \n      }).catch ((err)  => {\n        console.log('ERRO NA REQUISIÇÃO DAS TASKS')\n        console.log(err)\n      })\n    },\n\n    changeTaskStatus: async (state, id) => {\n      const idIndex = state.taskList.map((task) => task._id);\n      const index = idIndex.indexOf(id);\n      state.taskList[index].done = !state.taskList[index].done\n      await api.post(`/updateTask/${id}`, JSON.parse(JSON.stringify(state.taskList[index]))).then((res) => {\n        state.taskList = res.data;            \n        state.newTask = state.taskDefault;\n      }).catch((err) => {\n        console.log(err)\n      })\n      },\n    \n    addNewTask: async (state) => {   \n      await api.post(\"/create\", JSON.parse(JSON.stringify(state.newTask))).then((res) => {\n        state.taskList = res.data\n        \n        state.newTask = state.taskDefault;\n      }).catch((err) => {\n        console.log(err)\n      })                    \n    },\n\n    newTaskMount: (state, taskTemp) => {\n      state.newTask = taskTemp;               \n    },\n\n    deleteTask: async (state, id) => {      \n      await api.get(`/deleteTask/${id}`).then((res) => {\n        state.taskList = res.data        \n      }).catch((err) => {\n        console.log(err)\n      })\n    },\n    editTask: async (state, id) => {   \n      await api.post(`/updateTask/${id}`, JSON.parse(JSON.stringify(state.newTask))).then((res) => {\n        state.taskList = res.data        \n        state.newTask = state.taskDefault;\n      }).catch((err) => {\n        console.log(err)\n      }) \n    },\n\n\n  },\n  getters: {\n\n  },  \n})\n\nexport  {store}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}