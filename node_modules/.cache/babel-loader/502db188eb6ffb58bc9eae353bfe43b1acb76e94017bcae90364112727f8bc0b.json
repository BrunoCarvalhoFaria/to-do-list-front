{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport api from \"./services/api\";\nVue.use(Vuex);\nconst store = new Vuex.Store({\n  state: {\n    newTask: {\n      id: 0,\n      name: '',\n      date: '',\n      description: '',\n      done: false\n    },\n    taskDefault: {\n      id: 0,\n      name: '',\n      date: '',\n      description: '',\n      done: false\n    },\n    taskList: []\n  },\n  mutations: {\n    changeTaskStatus: async (state, index) => {\n      try {\n        state.taskList[index].done = !state.taskList[index].done;\n      } catch {\n        console.log(\"ERRO AO ALTERAR STATUS DA TAREFA\");\n      }\n    },\n    addNewTask: async state => {\n      state.taskList.length === 0 ? state.newTask.id = 0 : state.newTask.id = state.taskList[state.taskList.length - 1].id + 1;\n      try {\n        console.log('dado a ser salvo', state.newTask);\n        console.log('lista de dados', state.taskList);\n        state.taskList.push(state.newTask);\n        state.newTask = state.taskDefault;\n        console.log('dado default', state.newTask);\n        console.log('lista de dados apos salvar', state.taskList);\n      } catch {\n        console.log('ERRO AO ADICIONAR TAREFA');\n      }\n    },\n    newTaskMount: (state, taskTemp) => {\n      state.newTask = taskTemp;\n    },\n    deleteTask: async (state, index) => {\n      try {\n        state.taskList.splice(index, 1);\n      } catch {\n        console.log('ERRO AO DELETAR TAREFA');\n      }\n    },\n    editTask: async (state, index) => {\n      try {\n        state.taskList.splice(index, 1, state.newTask);\n        state.newTask = state.taskDefault;\n      } catch {\n        console.log('ERRO AO EDITAR TAREFA');\n      }\n    }\n  },\n  getters: {}\n});\nexport { store };","map":{"version":3,"names":["Vue","Vuex","api","use","store","Store","state","newTask","id","name","date","description","done","taskDefault","taskList","mutations","changeTaskStatus","index","console","log","addNewTask","length","push","newTaskMount","taskTemp","deleteTask","splice","editTask","getters"],"sources":["/home/bruno/Área de Trabalho/Programacao/to-do-list/front/src/vuex.js"],"sourcesContent":["\nimport Vue from \"vue\";\nimport Vuex from \"vuex\"\nimport api from \"./services/api\"\n\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  state: {\n    newTask: {\n      id: 0,\n      name: '',\n      date: '',\n      description: '',\n      done: false\n    },\n    taskDefault: {\n      id: 0,\n      name: '',\n      date: '',\n      description: '',\n      done: false\n    },\n    taskList: [\n      ]\n  },\n\n  mutations: {\n    changeTaskStatus: async (state, index) => {\n      try{\n        state.taskList[index].done = !state.taskList[index].done      \n      } catch {\n        console.log(\"ERRO AO ALTERAR STATUS DA TAREFA\")\n      }        \n\n      },\n    \n    addNewTask: async (state) => {\n      (state.taskList.length === 0) ? state.newTask.id = 0 : state.newTask.id =  state.taskList[state.taskList.length - 1].id + 1;\n      try {\n        console.log('dado a ser salvo', state.newTask)\n        console.log('lista de dados', state.taskList)\n        state.taskList.push(state.newTask);\n        state.newTask = state.taskDefault;\n        console.log('dado default', state.newTask)\n        console.log('lista de dados apos salvar', state.taskList)\n      } catch {\n        console.log('ERRO AO ADICIONAR TAREFA')\n      }      \n    },\n\n    newTaskMount: (state, taskTemp) => {\n      state.newTask = taskTemp;               \n    },\n\n    deleteTask: async (state, index) => {      \n      try {\n        state.taskList.splice(index, 1)\n      } catch{\n        console.log('ERRO AO DELETAR TAREFA')\n      }\n    },\n    editTask: async (state, index) => {   \n      try{\n        state.taskList.splice(index, 1, (state.newTask));  \n        state.newTask = state.taskDefault;\n      } catch{\n        console.log('ERRO AO EDITAR TAREFA')\n      }\n    },\n\n\n  },\n  getters: {\n\n  },  \n})\n\nexport  {store}"],"mappings":";AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,GAAG,MAAM,gBAAgB;AAGhCF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,MAAMG,KAAK,GAAG,IAAIH,IAAI,CAACI,KAAK,CAAC;EAC3BC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;IACR,CAAC;IACDC,WAAW,EAAE;MACXL,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;IACR,CAAC;IACDE,QAAQ,EAAE;EAEZ,CAAC;EAEDC,SAAS,EAAE;IACTC,gBAAgB,EAAE,OAAOV,KAAK,EAAEW,KAAK,KAAK;MACxC,IAAG;QACDX,KAAK,CAACQ,QAAQ,CAACG,KAAK,CAAC,CAACL,IAAI,GAAG,CAACN,KAAK,CAACQ,QAAQ,CAACG,KAAK,CAAC,CAACL,IAAI;MAC1D,CAAC,CAAC,MAAM;QACNM,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MACjD;IAEA,CAAC;IAEHC,UAAU,EAAE,MAAOd,KAAK,IAAK;MAC1BA,KAAK,CAACQ,QAAQ,CAACO,MAAM,KAAK,CAAC,GAAIf,KAAK,CAACC,OAAO,CAACC,EAAE,GAAG,CAAC,GAAGF,KAAK,CAACC,OAAO,CAACC,EAAE,GAAIF,KAAK,CAACQ,QAAQ,CAACR,KAAK,CAACQ,QAAQ,CAACO,MAAM,GAAG,CAAC,CAAC,CAACb,EAAE,GAAG,CAAC;MAC3H,IAAI;QACFU,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEb,KAAK,CAACC,OAAO,CAAC;QAC9CW,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEb,KAAK,CAACQ,QAAQ,CAAC;QAC7CR,KAAK,CAACQ,QAAQ,CAACQ,IAAI,CAAChB,KAAK,CAACC,OAAO,CAAC;QAClCD,KAAK,CAACC,OAAO,GAAGD,KAAK,CAACO,WAAW;QACjCK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEb,KAAK,CAACC,OAAO,CAAC;QAC1CW,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEb,KAAK,CAACQ,QAAQ,CAAC;MAC3D,CAAC,CAAC,MAAM;QACNI,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACzC;IACF,CAAC;IAEDI,YAAY,EAAE,CAACjB,KAAK,EAAEkB,QAAQ,KAAK;MACjClB,KAAK,CAACC,OAAO,GAAGiB,QAAQ;IAC1B,CAAC;IAEDC,UAAU,EAAE,OAAOnB,KAAK,EAAEW,KAAK,KAAK;MAClC,IAAI;QACFX,KAAK,CAACQ,QAAQ,CAACY,MAAM,CAACT,KAAK,EAAE,CAAC,CAAC;MACjC,CAAC,CAAC,MAAK;QACLC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACvC;IACF,CAAC;IACDQ,QAAQ,EAAE,OAAOrB,KAAK,EAAEW,KAAK,KAAK;MAChC,IAAG;QACDX,KAAK,CAACQ,QAAQ,CAACY,MAAM,CAACT,KAAK,EAAE,CAAC,EAAGX,KAAK,CAACC,OAAO,CAAE;QAChDD,KAAK,CAACC,OAAO,GAAGD,KAAK,CAACO,WAAW;MACnC,CAAC,CAAC,MAAK;QACLK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF;EAGF,CAAC;EACDS,OAAO,EAAE,CAET;AACF,CAAC,CAAC;AAEF,SAASxB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}